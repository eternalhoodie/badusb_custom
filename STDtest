$hook = "https://discord.com/api/webhooks/1366201501802041374/ENdipWjx_vaIQYHXDYo-kwppUazTUQ9LpTj7oewX0g_wln4_vi9F_HdVdiaiBjFoovZY"
$reportPath = "$env:TEMP\DefenderScan-$(Get-Date -f yyyyMMddHHmm).txt"

try {
    # Initialize report
    "=== Windows Defender Scan Report ===" | Out-File $reportPath
    "Scan started: $(Get-Date -Format u)" | Out-File $reportPath -Append

    # Update Defender signatures
    Update-MpSignature -ErrorAction Stop
    "Signature update completed" | Out-File $reportPath -Append

    # Start full scan as a background job
    $scan = Start-MpScan -ScanType FullScan -AsJob -ErrorAction Stop

    # Monitor scan progress
    while ($scan.State -eq 'Running') {
        $progress = (Get-MpComputerStatus).FullScanProgress
        "Scan progress: $progress%" | Out-File $reportPath -Append
        Start-Sleep -Seconds 30
    }

    # Collect threats
    $threats = Get-CimInstance -Namespace root/Microsoft/Windows/Defender -ClassName MSFT_MpThreat
    if ($threats) {
        "`n=== Detected Threats ===" | Out-File $reportPath -Append
        $threats | Select-Object ThreatName, Path, Severity | Format-Table -AutoSize | Out-File $reportPath -Append
    } else {
        "`nNo threats detected" | Out-File $reportPath -Append
    }

    # Add protection status
    "`n=== Protection Status ===" | Out-File $reportPath -Append
    Get-MpComputerStatus | Select-Object AntivirusEnabled, AntivirusSignatureAge, RealTimeProtectionEnabled | Format-List | Out-File $reportPath -Append

    # Upload report to Discord
    curl.exe -F "file1=@$reportPath" $hook
}
catch {
    $errorMsg = "ERROR: $($_.Exception.Message)`nStack Trace: $($_.ScriptStackTrace)"
    $errorMsg | Out-File $reportPath -Append
    curl.exe -F "file1=@$reportPath" $hook
}
finally {
    if (Test-Path $reportPath) {
        Remove-Item $reportPath -Force -ErrorAction SilentlyContinue
    }
}
